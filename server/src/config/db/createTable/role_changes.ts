// createTable.ts
import pool from '../db';

const role_changes = async () => {
  try {
    await pool.query(`
      CREATE TABLE IF NOT EXISTS role_changes (
        id SERIAL PRIMARY KEY,
        user_id INT NOT NULL,         
        old_role VARCHAR(50) NOT NULL,
        new_role VARCHAR(50) NOT NULL,
        changed_by INT,                
        changed_by_name VARCHAR(100), 
        changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
        CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        CONSTRAINT fk_changed_by FOREIGN KEY (changed_by) REFERENCES users(id) ON DELETE SET NULL
      );
    `);
    console.log('‚úÖ Users role_changes!');
  } catch (err) {
    console.error('‚ùå Error creatingrole_changes:', err);
  } finally {
    pool.end();
  }
};

role_changes();

//npx ts-node src/config/db/createTable/role_changes.ts


// üîë ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
// user_id ‚Üí ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô role
// old_role / new_role ‚Üí ‡πÄ‡∏Å‡πá‡∏ö role ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà
// changed_by ‚Üí id ‡∏Ç‡∏≠‡∏á admin ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô (FK ‡πÑ‡∏õ‡∏ó‡∏µ‡πà users.id)
// changed_by_name ‚Üí ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠ admin ‡∏ï‡∏≠‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏ß‡πâ snapshot (‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ admin ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö)
// ON DELETE CASCADE ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user_id ‚Üí ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏ô‡∏•‡∏ö audit log ‡∏Å‡πá‡∏ï‡∏≤‡∏°‡πÑ‡∏õ‡∏•‡∏ö (‡πÄ‡∏û‡∏£‡∏≤‡∏∞ user ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
// ON DELETE SET NULL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö changed_by ‚Üí ‡∏ñ‡πâ‡∏≤ admin ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö audit log ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏ï‡πà changed_by ‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô NULL (‡πÅ‡∏ï‡πà‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å changed_by_name ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà)